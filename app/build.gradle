plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.github.giuseppegargani.report'
    //id "de.undercouch.download" version "5.1.0"
}
apply plugin: "de.undercouch.download"

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.trialproject"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    //messo Giuseppe
    configurations {
        myArtifact
    }

    /*dependencies {
        myArtifact group: 'com.github.giuseppegargani', name: 'documenti',
                version: '0.05', transitive: false
    }*/

    task copyDependencies(type: Copy) {
        from configurations.myArtifact
        println("Directory di salvataggio:  $buildDir")
        into "$buildDir"
    }

    /* COPY FROM URL
     */

    task peppe() {

            //def target = uri("https://raw.githubusercontent.com/gradle/gradle/master/README.md")
            //def target = uri("https://www.dropbox.com/s/dfjhwouxxza69hn/documenti-0.05.txt?dl=0")
            def downloadedFile = ("${file(buildDir)}/documenti-0.05.txt")

            /*doLast {

                ant.invokeMethod("get", mapOf("src": target, "dest": downloadedFile, "verbose": true))

                logger.lifecycle("Downloaded Gradle README.md: ${downloadedFile.readText()}")
            }*/
        //ant.invokeMethod("get", mapOf("src": target, "dest": downloadedFile, "verbose": true))

        //AntBuilder ant = new AntBuilder() ;
        /*ant.invokeMethod( "get", new HashMap() {{
            put( "src", target ) ;
            put( "dest", downloadedFile ) ;
            put ( "verbose", true)
        }} ) ;*/

        }


    task downloadFile() {
        doLast {
            def address='https://www.dropbox.com/s/7sv4gy3tzm8yibs/main.txt'
            def target=file("$buildDir/peppe.txt")

            new File("${address.tokenize('/')[-1]}").withOutputStream { out ->
                new URL(address).withInputStream { from ->  out << from; }
            }
        }
    }

    tasks.register('copyReport2', Copy) {
       /* def fileLocation = 'file://techslides.com/demos/samples/sample.json'
        def fileURL = new URL(fileLocation)
        def remoteFile = new File(fileURL.toURI())*/
        //def fileLocation = 'file://www.dropbox.com/s/7sv4gy3tzm8yibs/main.txt'
        //def fileURL = new URL(fileLocation)
        //def remoteFile = new File(fileURL.toURI())
        //def documento = file('https://www.dropbox.com/s/7sv4gy3tzm8yibs/main.txt')
        from "$buildDir/main.yml"
        into "$buildDir/app"
    }

    task verificaesistenza() {
        doFirst {
            assert file("../main.yml").exists()
        }

    }

    tasks.register('copyReport', Copy) {
        doFirst {
            assert file("../main.yml").exists()
        }
        URL url3 = new URL("file://www.dropbox.com/s/7sv4gy3tzm8yibs/main.txt")
//        from dir("../main.yml")
//        into dir("../app/main.yml")
        from "../main.yml"
        into "../app"
    }

    /* DOWNLOAD
        https://github.com/michel-kraemer/gradle-download-task
        https://plugins.gradle.org/plugin/de.undercouch.download
     */

    /*task downloaddoc(type: Download) {
        src 'https://drive.google.com/file/d/14vPQ_NNh6LJNDGccZXtgDcHBkvvnurOb'
        dest "$buildDir/.."
    }*/

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //per stampa report
    implementation 'com.github.giuseppegargani:JsonReport:0.0.1'
    implementation 'com.github.giuseppegargani:reportplugin:0.05'
}